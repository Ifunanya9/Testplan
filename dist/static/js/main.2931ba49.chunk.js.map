{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","authNotifications","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","doc","set","latName","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","projectReducer","action","authReducer","message","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","fbProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2931ba49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink onClick={props.signOut}>Log Out</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating purple lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firestore = getFirebase().firestore();\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            latName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  // const testLinks =\r\n  //   auth.isEmpty === false ? <SignedInLinks /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          TestPlan\r\n        </Link>\r\n\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Notifications</span>\r\n            <ul className=\"notifications\">\r\n              {notifications &&\r\n                notifications.map((item) => {\r\n                  return (\r\n                    <li key={item.id}>\r\n                      <span className=\"purple-text\">{item.user} </span>\r\n                      <span>{item.content}</span>\r\n                      <div className=\"grey-text note-date\">\r\n                        {moment(item.time.toDate()).fromNow()}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notifications from \"./Notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    const authNotifications = !auth.uid ? (\r\n      <div className=\"section\">\r\n        <div className=\"dashboard\">\r\n          <div className=\"card card-height z-de\">\r\n            <div className=\"card-content\">\r\n              <h1 className=\"center text-white\">Welcome to TestPlan</h1>\r\n              <p className=\"center text-white\">\r\n                A place to have fun and learn about stuff.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div className=\"container\">{authNotifications}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./signin.css\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <div className=\"red-text center red lighten-5 fail\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <div className=\"red-text center red lighten-5 fail\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn purple lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    // make async call to database\r\n    const firestore = getFirebase().firestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.latName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import projectReducer from \"./projectReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport firebase from \"firebase/app\";\nimport registerServiceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n// <h4 className=\"center\">Loading...</h4>\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\n    // reactReduxFirebase({useFirestoreForProfile: true})\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n};\n\nconst fbProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div></div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...fbProps}>\n      <BrowserRouter>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </BrowserRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}